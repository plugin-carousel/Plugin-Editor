{"version":3,"file":"js/app.277f6d754895aa37fe37.js","mappings":"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","sources":["webpack:///./src/Route/index.tsx","webpack:///./src/Store/TaskHall/reducer.ts","webpack:///./src/Store/rootReducer.ts","webpack:///./src/Locales/i18n.ts","webpack:///./src/Api/mainDomain.ts","webpack:///./src/Api/redirectDomain.ts","webpack:///./src/Api/interceptor.ts","webpack:///./src/Api/taskHall.ts","webpack:///./src/Store/TaskHall/actions.ts","webpack:///./src/Store/TaskHall/types.ts","webpack:///./src/Store/TaskHall/sagas.ts","webpack:///./src/Store/rootStore.ts","webpack:///./src/Store/rootSaga.ts","webpack:///./src/index.tsx"],"sourcesContent":["/**\n * file: Project Router File\n * date: 2020-07-21\n * author: Frank\n * lastModify: Frank 2020-07-21\n */\nimport { LoadingV2 } from '@datareachable/dr_front_componentlibrary';\nimport React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n/* <------------------------------------ **** Lazy Loading all the pages START **** ------------------------------------ */\nexport const routeList = [\n    {\n        path: '/',\n        element: React.lazy(() => import('../Pages/Entry')),\n        children: [\n            {\n                path: '/',\n                element: React.lazy(\n                    () => import(/* webpackChunkName: 'DashboardPage' */ '../Pages/PluginEditor'),\n                ),\n                children: [\n                    {\n                        path: '',\n                        element: React.lazy(\n                            () => import('../Pages/PluginEditor/Components/ChinaStyleBox'),\n                        ),\n                    },\n                    {\n                        path: '/gamestyle',\n                        element: React.lazy(\n                            () => import('../Pages/PluginEditor/Components/GameStyleBox'),\n                        ),\n                    },\n                    {\n                        path: '/tecstyle',\n                        element: React.lazy(\n                            () => import('../Pages/PluginEditor/Components/TecStyleBox'),\n                        ),\n                    },\n                ],\n            },\n            {\n                path: '/plugin-detail',\n                element: React.lazy(() => import('../Pages/PluginEditorDetailPage')),\n            },\n        ],\n    },\n    {\n        path: '*',\n        element: React.lazy(() => import('../Pages/NoMatchPage')),\n    },\n];\n/* <------------------------------------ **** Lazy Loading all the pages END **** ------------------------------------ */\n\nconst RootRouter = (): JSX.Element => {\n    const mapRouteList = (data?: typeof routeList) => {\n        return data?.map((item, n) => {\n            const CRoute = item.element;\n            const El = <CRoute />;\n            return (\n                <Route key={`${n}_route`} path={item.path} element={El}>\n                    {mapRouteList(item.children)}\n                </Route>\n            );\n        });\n    };\n\n    return (\n        <Suspense fallback={<LoadingV2 />}>\n            <Router basename={process.env.BASENAME}>\n                <Routes>{mapRouteList(routeList)}</Routes>\n            </Router>\n        </Suspense>\n    );\n};\n\nexport default RootRouter;\n","/**\n * @file 有关组织的reducer\n * @date 2021-09-15\n * @author xuejie.he\n * @lastModify xuejie.he 2021-09-15\n */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport * as types from './types';\n\nconst initialState: types.TaskHallReducerProps = {\n    publicIndustry: {\n        data: null,\n        loading: true,\n    },\n};\n\nexport default createSlice({\n    name: 'taskHall',\n    initialState,\n    reducers: {\n        setIndustryList: (\n            state,\n            action: PayloadAction<{ loading: boolean; data?: types.IndustryResponse[] }>,\n        ) => {\n            if (action.payload.data) {\n                state.publicIndustry.data = [...action.payload.data];\n            }\n            state.publicIndustry.loading = action.payload.loading;\n        },\n    },\n});\n","/**\n * @file root reducer\n * @date 2020-09-22\n * @author Frank\n * @lastModify Frank 2020-09-22\n */\nimport taskHall from './TaskHall/reducer';\n// combine all the reducer in here\nconst rootReducer = { [taskHall.name]: taskHall.reducer };\n// export the root reducer state\n\nexport default rootReducer;\n","/**\n * file: Multi Language setting file\n * date: 2020-07-21\n * author: Frank\n * lastModify: Frank 2020-07-21\n */\nimport { getLanguage } from '@datareachable/dr_front_componentlibrary';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport translationCn from './Translations/cn/translation.json';\nimport translationEn from './Translations/en/translation.json';\n\nconst resources = {\n    en: {\n        translation: translationEn,\n    },\n    cn: {\n        translation: translationCn,\n    },\n};\nvoid (async () => {\n    const lang = await getLanguage();\n    void i18n\n        // pass the i18n instance to react-i18next.\n        .use(initReactI18next)\n        // init i18next\n        // for all options read: https://www.i18next.com/overview/configuration-options\n        .init({\n            resources,\n            lng: lang ?? 'en',\n            interpolation: {\n                escapeValue: false, // not needed for react!!\n            },\n        });\n})();\n\nexport default i18n;\n","/**\n * @file main domain\n * @date 2021-1-16\n * @author Jack\n * @lastModify  2021-1-16\n */\nlet mainDomain = '';\nlet userSystemProfileMainDomain = '';\nlet projectManagementDomain = '';\nlet dashboardDomain = '';\nlet loginBaseUrl = '';\nlet authBaseUrl = '';\nlet queryCenterService = '';\nlet openIDConnectService1 = '';\nlet profileServiceUrl = '';\n\nswitch (process.env.NODE_ENV) {\n    // npm start 本地开发环境\n    case 'development': {\n        mainDomain = `https://api.dev.datareachable.net/mkt/v2/dev`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = `${mainDomain}/user/v2/dev`;\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v2';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v2';\n        queryCenterService = '/query/centre/v2/dev';\n        openIDConnectService1 = '/common/oidc/v2';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n    // npm run buildV1 线上开发环境 (development test, 产品 QA)\n    case 'v1_dev': {\n        mainDomain = `https://api.dev.datareachable.net/mkt/v1/dev`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = 'https://profile.dev.datareachable.net/api/v2';\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v1';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v1';\n        queryCenterService = '/query/centre/v2/dev';\n        openIDConnectService1 = '/common/oidc/v1';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n    // npm run buildV2 线上开发环境 (development test, 产品 QA)\n    case 'v2_dev': {\n        mainDomain = `https://api.dev.datareachable.net/mkt/v2/dev`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = `${mainDomain}/user/v2/dev`;\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v2';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v2';\n        queryCenterService = '/query/centre/v2/dev';\n        openIDConnectService1 = '/common/oidc/v2';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n    // npm run testV2 测试环境, 开发稳定版\n    case 'v2_test': {\n        mainDomain = `https://api.dev.datareachable.net/mkt/v2/test`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = `${mainDomain}/user/v2/test`;\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v2/test';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v2/test';\n        queryCenterService = '/query/centre/v2/test';\n        openIDConnectService1 = '/common/oidc/v2/test';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n    // 线上生产环境, 正式版本\n    case 'production': {\n        mainDomain = `https://api.dev.datareachable.net/mkt`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = `${mainDomain}/user/v2/dev`;\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v1';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v1';\n        queryCenterService = '/query/centre/v2/dev';\n        openIDConnectService1 = '/common/oidc/v2';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n    // 其他环境\n    default: {\n        mainDomain = `https://api.dev.datareachable.net/mkt`;\n        dashboardDomain = 'https://dashboard.dev.datareachable.net/';\n        userSystemProfileMainDomain = `${mainDomain}/user/v2/dev`;\n        projectManagementDomain = 'https://spm.dev.datareachable.net/';\n        loginBaseUrl = 'https://api.dev.datareachable.net/common/oidc/v2';\n        authBaseUrl = 'https://api.dev.datareachable.net/auth/common/v2';\n        queryCenterService = '/query/centre/v2/dev';\n        openIDConnectService1 = '/common/oidc/v2';\n        profileServiceUrl = 'https://api.dev.datareachable.net/query/centre/v2/dev/profile';\n        break;\n    }\n}\n\nexport {\n    userSystemProfileMainDomain,\n    projectManagementDomain,\n    dashboardDomain,\n    loginBaseUrl,\n    authBaseUrl,\n    queryCenterService,\n    openIDConnectService1,\n    profileServiceUrl,\n};\n\nexport default mainDomain;\n","/**\n * @file redirect domain\n * @date 2021-1-16\n * @author Jack\n * @lastModify  2021-1-16\n */\n\nimport { getJwtKey } from '@datareachable/dr_front_componentlibrary';\nimport mainDomain, { openIDConnectService1 } from './mainDomain';\n\nlet redirectToSignInPage = '';\nlet redirectToSignOutPage = '';\nlet redirectToCompanyWebsite = ''; // redirect to company website\nlet redirectToDashboardPage = ''; // redirect to dashboard page\nlet redirectToSignUpPage = ''; // redirect to sign up page\nlet redirectToLandingPage = '';\nlet redirectToProfilePage = '';\nlet redirectToMarketPage = '';\nlet redirectToQEditor = '';\nlet redirectToSurveyPM = '';\nlet redirectToAnalysis = '';\nlet redirectToDist = '';\nlet redirectToPlugins = '';\nlet redirectToCommunity = '';\nlet appParams = '';\nlet basename = process.env.BASENAME || '';\nconst jwtKey = getJwtKey();\nconst appName = 'dashboard';\n\nswitch (process.env.NODE_ENV) {\n    // npm start 本地开发环境\n    case 'development': {\n        basename = '/v2/dev';\n        appParams = `app=${appName}-v2-dev`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net/v2-dev/main';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n    // npm run buildV1 生产测试环境 (development test)\n    case 'v1_dev': {\n        appParams = `app=${appName}-v1-dev`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n    // npm run buildV2 生产测试环境 (development test)\n    case 'v2_dev': {\n        appParams = `app=${appName}-v2-dev`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net/v2-dev/main';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n    // npm run testV2 测试环境, 线上稳定版\n    case 'v2_test': {\n        appParams = `app=${appName}-v2-test`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net/v2-test/main';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n    // 线上生产环境, 正式版本\n    case 'production': {\n        appParams = `app=${appName}-v2-dev`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n    // 其他环境\n    default: {\n        appParams = `app=${appName}-v2-dev`;\n        redirectToSignInPage = `${mainDomain}${openIDConnectService1}/entry?${appParams}`;\n        redirectToSignOutPage = `${mainDomain}${openIDConnectService1}/logout?${appParams}`;\n        redirectToCompanyWebsite = `https://www.datareachable.com`;\n        redirectToDashboardPage = `https://dashboard.dev.datareachable.net${basename}`;\n        redirectToSignUpPage = `https://signup.dev.datareachable.net${basename}`;\n        redirectToLandingPage = `https://landing.dev.datareachable.net${basename}`;\n        redirectToProfilePage = `https://profile.dev.datareachable.net${basename}`;\n        redirectToMarketPage = `https://market.dev.datareachable.net${basename}`;\n        redirectToQEditor = `https://qdashboard.dev.datareachable.net${basename}`;\n        redirectToSurveyPM = `https://spm.dev.datareachable.net${basename}`;\n        redirectToAnalysis = `https://anlys.dev.datareachable.net${basename}`;\n        redirectToDist = `https://dist.dev.datareachable.net${basename}`;\n        redirectToPlugins = 'https://plugin-system.dev.datareachable.net';\n        redirectToCommunity = `https://cmty.dev.datareachable.net${basename}`;\n        break;\n    }\n}\nexport {\n    basename,\n    appParams,\n    redirectToSignInPage,\n    redirectToSignOutPage,\n    redirectToCompanyWebsite,\n    redirectToDashboardPage,\n    redirectToSignUpPage,\n    redirectToLandingPage,\n    redirectToProfilePage,\n    redirectToMarketPage,\n    redirectToQEditor,\n    redirectToSurveyPM,\n    redirectToAnalysis,\n    redirectToDist,\n    redirectToPlugins,\n    redirectToCommunity,\n    jwtKey,\n};\n","/**\n * @file\n * @date 2021-1-13\n * @author Jack\n * @lastModify  2021-1-13\n */\n/* <------------------------------------ **** DEPENDENCE IMPORT START **** ------------------------------------ */\n/** This section will include all the necessary dependence for this tsx file */\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse, Canceler } from 'axios';\nimport i18n from '~/Locales/i18n';\nimport mainDomain from './mainDomain';\nimport { jwtKey, redirectToSignInPage } from './redirectDomain';\n\n/* <------------------------------------ **** DEPENDENCE IMPORT END **** ------------------------------------ */\n\nexport type CustomAxiosResponse<T> = AxiosResponse<{\n    data?: T;\n    code: number;\n    message: string;\n}> | void;\n\n// create a axios instanse\nconst service = axios.create({\n    baseURL: mainDomain, // api base_url\n    timeout: 10000, // request timeout\n});\n\n// cancel request\n\nexport let allPendingRequestsRecord: (AxiosRequestConfig & {\n    c: Canceler;\n})[] = [];\n\n// const ignoredRequest = [\n//     '/api/v1/info',\n//     '/api/v1/organization/list',\n//     '/api/v1/entry/info',\n//     '/api/v1/session/logout',\n//     '/api/v1/session/status',\n//     `${mainDomain}/msg/notif/stable/notification/readed`,\n// ];\n\n// clear all request\nexport const clearRequestList = (): void => {\n    for (let i = 0; i < allPendingRequestsRecord.length; ) {\n        allPendingRequestsRecord[i].c();\n        ++i;\n    }\n\n    allPendingRequestsRecord = [];\n};\n\n// remove request\nexport const removeRequest = (config: AxiosRequestConfig): void => {\n    const n = allPendingRequestsRecord.findIndex((index) => {\n        let state = true;\n        for (const key in config) {\n            if (config[key] !== index[key]) {\n                state = false;\n                break;\n            }\n        }\n        if (state) {\n            index.c();\n        }\n        return state;\n    });\n    allPendingRequestsRecord.splice(n, 1);\n};\n\n// request interceptors\nservice.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n        if (window.navigator.onLine === false) {\n            throw new axios.Cancel(i18n.t('contractNetworkAlertTip.networkNotGood'));\n        }\n        const jwt = window.localStorage.getItem(`${jwtKey}`);\n        if (jwt) {\n            return Object.assign({}, config, { ...config.headers, ['DR-AUTH']: jwt });\n        }\n        return config;\n    },\n    (error: AxiosError) => {\n        console.log('request error-->', error); // for debug\n        return error;\n    },\n);\n\n// response interceptors\nservice.interceptors.response.use(\n    (response: AxiosResponse<{ code: number; message: string }>) => {\n        // removeRequest(response.config);\n        if (response.data.code === 403001 || response.data.code === 401001) {\n            window.localStorage.removeItem(`${jwtKey}`);\n            if (process.env.NODE_ENV !== 'development') {\n                window.location.replace(`${redirectToSignInPage}&lang=${i18n.language}`);\n            }\n        }\n        return response;\n    },\n    (error: AxiosError) => {\n        // removeRequest(error.config);\n        if (!axios.isCancel(error)) {\n            return error;\n        }\n    },\n);\nexport default service;\n","/**\n * @file task hall相关的api请求\n * @date 2022-10-11\n * @author xuejie.he\n * @lastModify xuejie.he 2022-10-11\n */\n/* <------------------------------------ **** DEPENDENCE IMPORT START **** ------------------------------------ */\n/** This section will include all the necessary dependence for this tsx file */\nimport axios from './interceptor';\n/* <------------------------------------ **** DEPENDENCE IMPORT END **** ------------------------------------ */\n/* <------------------------------------ **** API response START **** ------------------------------------ */\n/* <------------------------------------ **** API response END **** ------------------------------------ */\n/* <------------------------------------ **** API START **** ------------------------------------ */\n\n/**\n * 获取公共的行业列表\n */\nexport const getPublicIndustry = () => {\n    return axios.request({\n        url: '/pub/industry/all',\n        method: 'get',\n    });\n};\n","/**\n * @file 有关组织的行为\n * @date 2022-10-10\n * @author xuejie.he\n * @lastModify xuejie.he 2022-10-10\n */\nimport * as types from './types';\nimport reducer from './reducer';\n\nconst getIndustryList = (): types.GetIndustryListAction => {\n    return {\n        type: types.SAGA_ACTION_TYPE.GET_INDUSTRY_LIST_SAGA,\n    };\n};\n\nconst { setIndustryList: setIndustryListReducer } = reducer.actions;\n\nexport { getIndustryList, setIndustryListReducer };\n","/**\n * @file 有关task hall的type\n * @date 2022-10-10\n * @author xuejie.he\n * @lastModify xuejie.he 2022-10-10\n */\n/* <------------------------ **** Complex data in the initialState type START**** ------------------------------ */\n\n/**\n * industry item type\n */\nexport interface IndustryResponse {\n    id: string;\n    name: string;\n    status: number;\n}\n/* <------------------------ **** Complex data in the initialState type END**** ------------------------------ */\n\n/* <------------------------------------ **** initialState type start **** ------------------------------------ */\nexport interface TaskHallReducerProps {\n    publicIndustry: {\n        data: IndustryResponse[] | null;\n        loading: boolean;\n    };\n}\n/* <------------------------------------ **** initialState type end **** ------------------------------------ */\n\n/* <------------------------------------ **** enum action types START **** ------------------------------------ */\nexport enum SAGA_ACTION_TYPE {\n    GET_INDUSTRY_LIST_SAGA = 'GET_INDUSTRY_LIST_SAGA',\n}\n\n/* <------------------------------------ **** enum action types END **** ------------------------------------ */\n\n/* <------------------------------------ **** payload types START **** ------------------------------------ */\n\nexport interface GetIndustryListAction {\n    type: SAGA_ACTION_TYPE.GET_INDUSTRY_LIST_SAGA;\n}\n\n/* <------------------------------------ **** payload types END **** ------------------------------------ */\n","/**\n * @file 有关组织的saga\n * @date 2022-10-10\n * @author xuejie.he\n * @lastModify xuejie.he 2022-10-10\n */\n\nimport { message } from '@datareachable/dr_front_componentlibrary';\nimport { call, fork, put, takeLatest } from 'redux-saga/effects';\nimport { CustomAxiosResponse } from '~/Api/interceptor';\nimport { getPublicIndustry } from '~/Api/taskHall';\nimport * as actions from './actions';\nimport * as types from './types';\nimport i18n from './../../Locales/i18n';\n\nfunction* handleGetIndustryListSaga() {\n    yield put(actions.setIndustryListReducer({ loading: true }));\n    const res: CustomAxiosResponse<types.IndustryResponse[]> = yield call(getPublicIndustry);\n    if (res?.data.code === 200001) {\n        yield put(actions.setIndustryListReducer({ data: res.data.data, loading: false }));\n    } else {\n        yield put(actions.setIndustryListReducer({ loading: false }));\n        message.auto({\n            type: 'error',\n            content: `${i18n.t(res?.data?.message ?? 'Get industry list failed!')}`,\n        });\n    }\n}\n\nfunction* watchSagaAction() {\n    yield takeLatest(types.SAGA_ACTION_TYPE.GET_INDUSTRY_LIST_SAGA, handleGetIndustryListSaga);\n}\n\nconst sagas = [fork(watchSagaAction)];\n\nexport default sagas;\n","/**\n * file: root store\n * date: 2020-08-28\n * author: Frank\n * lastModify: Frank 2020-08-28\n */\nimport rootReducer from './rootReducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootSaga from './rootSaga';\nimport createSagaMiddleware from 'redux-saga';\n\n// create sage middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// apply saga middle ware and reducer\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware(getDefaultMiddleware) {\n        return [...getDefaultMiddleware({ thunk: false }), sagaMiddleware];\n    },\n});\n\n//import the root saga and run this saga\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","/**\n * @file root saga file\n * @date 2020-09-22\n * @author Frank\n * @lastModify Frank 2020-09-22\n */\nimport { all } from 'redux-saga/effects';\n\nimport taskHall from './TaskHall/sagas';\nexport default function* rootSaga(): Generator {\n    try {\n        yield all([\n            // this is where the saga combine into the rootSaga\n            ...taskHall,\n        ]);\n    } catch (err) {\n        // This is where error monitoring should go\n        console.log('error caught in rootsaga::', err);\n    }\n}\n","/**\n * @file project index file\n * @date 2020-09-22\n * @author Frank\n * @lastModify Frank 2020-09-22\n */\nimport { createRoot } from 'react-dom/client';\nimport RootRouter from './Route';\n// import i18n (needs to be bundled ;))\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider } from 'react-redux';\nimport store from './Store/rootStore';\nimport i18n from './Locales/i18n';\nimport './global.css';\ncreateRoot(document.getElementById('root') ?? document.body).render(\n    <I18nextProvider i18n={i18n}>\n        <Provider store={store}>\n            <RootRouter />\n        </Provider>\n    </I18nextProvider>,\n);\n"],"names":["routeList","path","element","React","children","mapRouteList","data","map","item","n","CRoute","El","Route","Suspense","fallback","basename","process","Routes","createSlice","name","initialState","publicIndustry","loading","reducers","setIndustryList","state","action","payload","taskHall","resources","en","translation","cn","translationCn","lang","getLanguage","i18n","initReactI18next","init","lng","interpolation","escapeValue","mainDomain","userSystemProfileMainDomain","projectManagementDomain","dashboardDomain","loginBaseUrl","authBaseUrl","queryCenterService","openIDConnectService1","profileServiceUrl","redirectToSignInPage","redirectToSignOutPage","redirectToCompanyWebsite","redirectToDashboardPage","redirectToSignUpPage","redirectToLandingPage","redirectToProfilePage","redirectToMarketPage","redirectToQEditor","redirectToSurveyPM","redirectToAnalysis","redirectToDist","redirectToPlugins","redirectToCommunity","appParams","jwtKey","getJwtKey","service","axios","baseURL","timeout","interceptors","request","use","config","window","navigator","onLine","t","jwt","localStorage","getItem","Object","assign","headers","error","console","log","response","code","removeItem","location","replace","language","getPublicIndustry","url","method","setIndustryListReducer","reducer","actions","SAGA_ACTION_TYPE","handleGetIndustryListSaga","put","res","call","message","type","content","fork","takeLatest","types","sagaMiddleware","createSagaMiddleware","store","configureStore","rootReducer","middleware","getDefaultMiddleware","thunk","run","all","err","createRoot","document","getElementById","body","render","Provider"],"sourceRoot":""}